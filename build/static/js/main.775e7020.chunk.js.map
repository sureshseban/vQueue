{"version":3,"sources":["assets/images/WEQ-logo.svg","assets/images/user.svg","assets/images/Shopping Cart-ico.svg","assets/images/Pointer.svg","utils/services.js","components/hooks/useDocumentTitle.js","components/Register/Register.js","components/Login/Login.js","components/Menu/Menu.js","components/AddShop/AddShop.js","components/hooks/http.js","components/filter/Filter.js","components/MyShops/MyShops.js","components/TodaysBookings/TodaysBookings.js","components/PastBookings/PastBookings.js","components/Header/Header.js","components/ShopInfo/ShopInfo.js","components/router/ProtectedRoute.js","components/Home/Home.js","components/MyProfile/MyProfile.js","components/router/Router.js","App.js","serviceWorker.js","index.js"],"names":["_services","selectedShop","baseURL","dateFormat_UI","dateFormat_API","isAuthenticated","localStorage","user","length","useDocumentTitle","title","useEffect","document","Register","props","initialValues","ClientName","FirstName","LastName","PhoneNumber","otp","useState","setOTP","spinning","setSpinning","spinningAll","setSpinningAll","showOTPScreen","setShowOTPScreen","showAlert","setShowAlert","validationSchema","Yup","required","logoStyle","backgroundImage","process","className","style","onSubmit","values","axios","post","UserEmail","then","resp","data","IsExist","Name","RoleID","UserID","ClientID","setItem","JSON","stringify","catch","err","console","log","Item","name","hasFeedback","showValidateSuccess","autoComplete","placeholder","onChange","type","parse","getItem","code","history","push","marginBottom","id","value","numInputs","isInputNum","message","showIcon","closable","to","Login","username","prefix","UserOutlined","logo","require","Menu","content","activeClassName","exact","href","alt","src","visibility","direction","role","placement","trigger","SelectOptions","label","this","AddShop","ShopName","Category","Building","StreetName","City","State","SlotDuration","VisitorsInEachSlot","MaximumBookingCount","StartTime","nullable","EndTime","Email","email","SecondaryContact","categories","setCategories","isLoading","setIsLoading","lat","lng","location","setLocation","_categories","forEach","element","_category","CategoryID","CategoryName","BranchSupervisorRequired","BranchSupervisorContact","Pincode","Country","_StartTime","Date","toLocaleTimeString","_EndTime","BranchName","BranchPhoneNumber","BranchEmailID","IsBranchSupervisor","AdminPhoneNumber","BuildingNumber","Latitude","Longitude","BranchStartTime","BranchEndTime","SlotInMinutes","EntryInEachSlot","WorkingDayList","BranchImage","display","paddingRight","paddingLeft","options","containerElement","height","mapElement","defaultPosition","position","width","format","useHttpPost","url","req","dependencies","fetchedData","setFetchedData","Filter","onSearch","allowClear","e","target","pointer","MyShops","filter","setFilter","filteredShops","toLowerCase","includes","Fragment","map","item","index","onClick","shop","key","extra","TodaysBookings","morningSlots","setMorningSlots","afternoonSlots","setAfternoonSlots","eveningSlots","setEveningSlots","BranchID","StartDate","moment","EndDate","array","_slots","config","reduce","result","currentValue","Morning","Afternoon","Evening","_index","BookedCount","BookingUniqueID","SlotStartTime","SlotEndTime","RangePicker","DatePicker","PastBookings","currentDate","lastFiveDate","setDate","getDate","startDate","setStartDate","endDate","setEndDate","slots","setSlots","emptyTitle","setEmptyTitle","BookedDate","SelectedDateRange","uniqueBookedDates","Set","_newSlots","_slot","date","_element","defaultValue","dates","_item","UserName","Header","ShopInfo","setLoading","showEdit","setShowEdit","processData","useHttpPost_processData","category","shopDetails","AdminUserID","ProtectedRoute","Component","rest","render","Home","backgroundColor","minHeight","path","match","MyProfile","Router","component","App","Boolean","window","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.775e7020.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/WEQ-logo.7ec38a9a.svg\";","export default __webpack_public_path__ + \"static/media/user.43cd70fb.svg\";","export default __webpack_public_path__ + \"static/media/Shopping Cart-ico.a5a1f41b.svg\";","export default __webpack_public_path__ + \"static/media/Pointer.8648e8a6.svg\";","class services {\r\n    selectedShop = null\r\n    baseURL = 'http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com'\r\n    dateFormat_UI = 'DD/MM/YYYY'\r\n    dateFormat_API = 'YYYY-MM-DD'\r\n    isAuthenticated = (localStorage.user && localStorage.user.length) ? true : false\r\n}\r\n\r\nconst _services = new services()\r\nexport default _services","import {useEffect} from 'react'\r\n\r\nfunction useDocumentTitle(title) {\r\n\r\n    useEffect(() => {\r\n        document.title = `WEQ | ${title}`\r\n    }, [])\r\n\r\n}\r\n\r\nexport default useDocumentTitle","import React, { useState } from 'react'\r\nimport { Formik } from 'formik'\r\nimport './Register.css'\r\nimport { Input, Form } from 'formik-antd'\r\nimport * as Yup from 'yup'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Spin, Alert } from 'antd'\r\nimport OtpInput from 'react-otp-input'\r\nimport axios from 'axios'\r\nimport _services from '../../utils/services'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\n\r\nfunction Register(props) {\r\n\r\n    const initialValues = {\r\n        ClientName: '',\r\n        FirstName: '',\r\n        LastName: '',\r\n        PhoneNumber: '',\r\n        otp: ''\r\n    }\r\n\r\n    const [otp, setOTP] = useState('')\r\n    const [spinning, setSpinning] = useState(false)\r\n    const [spinningAll, setSpinningAll] = useState(false)\r\n    const [showOTPScreen, setShowOTPScreen] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n\r\n    useDocumentTitle('Registration')\r\n\r\n    const validationSchema = Yup.object({\r\n        PhoneNumber: Yup.string().required('Mobile Number required!'),\r\n        ClientName: Yup.string().required('Brand Name required!'),\r\n        FirstName: Yup.string().required('First Name required!'),\r\n        LastName: Yup.string().required('Last Name required!')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        setSpinning(true)\r\n        axios.post(`${_services.baseURL}/superadmin/auth/register`, {\r\n            ClientName: values.ClientName,\r\n            FirstName: values.FirstName,\r\n            LastName: values.LastName,\r\n            UserEmail: '',\r\n            PhoneNumber: values.PhoneNumber\r\n        }).then(resp => {\r\n            setSpinning(false)\r\n            if (resp.data.IsExist) {\r\n                setShowAlert(true)\r\n            } else {\r\n                const user = {\r\n                    Name: resp.data.otp.Name,\r\n                    PhoneNumber: values.PhoneNumber,\r\n                    RoleID: resp.data.otp.RoleID,\r\n                    UserID: resp.data.otp.UserID,\r\n                    ClientID: resp.data.otp.ClientID,\r\n                    ClientName: resp.data.otp.ClientName\r\n                }\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                setShowOTPScreen(true)\r\n            }\r\n        }).catch(err => {\r\n            setSpinning(false)\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const onOTPSubmit = values => {\r\n        setSpinningAll(true)\r\n        const user = JSON.parse(localStorage.getItem('user'))\r\n        axios.post(`${_services.baseURL}/superadmin/auth/verify`, {\r\n            PhoneNumber: user.PhoneNumber,\r\n            code: otp\r\n        }).then(resp => {\r\n            setSpinningAll(false)\r\n            props.history.push(\"/add-shop\")\r\n        }).catch(err => {\r\n            setSpinningAll(false)\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleChange = otp => {\r\n        setOTP(otp)\r\n    }\r\n\r\n    const changePhoneNumber = () => {\r\n        setShowAlert(false)\r\n    }\r\n\r\n    const logoStyle = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/logo.svg)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <div className=\"left-panel\">\r\n                <span className=\"login-logo\" style={logoStyle}></span>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <Spin spinning={spinningAll} >\r\n                    <Spin spinning={spinning} >\r\n                        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} >\r\n                            <Form>\r\n                                <div className=\"right-panel-title\">Create your WeQ account here</div>\r\n                                <div className=\"field-label\">\r\n                                    Brand Name\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"ClientName\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"ClientName\" autoComplete=\"off\" placeholder=\"Brand Name\" />\r\n                                </Form.Item>\r\n                                <div className=\"field-label\">\r\n                                    First Name\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"FirstName\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"FirstName\" autoComplete=\"off\" placeholder=\"First Name\" />\r\n                                </Form.Item>\r\n                                <div className=\"field-label\">\r\n                                    Last Name\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"LastName\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"LastName\" autoComplete=\"off\" placeholder=\"Last Name\" />\r\n                                </Form.Item>\r\n                                <div className=\"field-label\">\r\n                                    Mobile Number\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"PhoneNumber\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"PhoneNumber\" autoComplete=\"off\" onChange={changePhoneNumber} placeholder=\"Mobile Number\" />\r\n                                </Form.Item>\r\n                                {\r\n                                    !showOTPScreen ? <div className='ant-row ant-form-item'>\r\n                                        <button type=\"submit\" className=\"login-btn\">Create Account</button>\r\n                                    </div> : null\r\n                                }\r\n                            </Form>\r\n                        </Formik>\r\n                    </Spin>\r\n                    {\r\n                        showOTPScreen ? <Formik initialValues={initialValues} onSubmit={onOTPSubmit} >\r\n                            <Form>\r\n                                <div className=\"field-label\" style={{ marginBottom: '5px' }} >\r\n                                    Enter OTP\r\n                        </div>\r\n                                <div id=\"otp-input-root\">\r\n                                    <OtpInput\r\n                                        value={otp}\r\n                                        onChange={handleChange}\r\n                                        numInputs={4}\r\n                                        isInputNum\r\n                                    />\r\n                                </div>\r\n                                <div className='ant-form-item'>\r\n                                    <button className=\"login-btn\">Submit</button>\r\n                                </div>\r\n                            </Form>\r\n                        </Formik> : null\r\n                    }{\r\n                        showAlert ? <div className=\"ant-form-item\">\r\n                            <Alert message=\"This mobile number/Brand Name already in use. Please try with a different one.\" type=\"error\" showIcon closable />\r\n                        </div> : null\r\n                    }\r\n                    <div className=\"hyperlink-wrapper\">\r\n                        Already have an Account? <NavLink to=\"/login\">Login</NavLink>\r\n                    </div>\r\n                </Spin>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Register","import React, { useState } from 'react'\r\nimport { Formik } from 'formik'\r\nimport './Login.css'\r\nimport { Input, Form } from 'formik-antd'\r\nimport * as Yup from 'yup'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Spin, Alert } from 'antd';\r\nimport OtpInput from 'react-otp-input';\r\nimport axios from 'axios'\r\nimport _services from '../../utils/services'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\n\r\nfunction Login(props) {\r\n\r\n    const initialValues = {\r\n        username: '',\r\n        otp: ''\r\n    }\r\n\r\n    const [otp, setOTP] = useState('')\r\n    const [spinning, setSpinning] = useState(false)\r\n    const [spinningAll, setSpinningAll] = useState(false)\r\n    const [showOTPScreen, setShowOTPScreen] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n\r\n    useDocumentTitle('Login')\r\n\r\n    const validationSchema = Yup.object({\r\n        username: Yup.string().required('Mobile Number required!')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        setSpinning(true)\r\n        axios.post(`${_services.baseURL}/superadmin/auth/login`, {\r\n            PhoneNumber: values.username\r\n        }).then(resp => {\r\n            setSpinning(false)\r\n            if (!resp.data.IsExist) {\r\n                setShowAlert(true)\r\n            } else {\r\n                const user = {\r\n                    Name: resp.data.otp.Name,\r\n                    PhoneNumber: values.username,\r\n                    RoleID: resp.data.otp.RoleID,\r\n                    UserID: resp.data.otp.UserID,\r\n                    ClientID: resp.data.otp.ClientID,\r\n                    ClientName: resp.data.otp.ClientName\r\n                }\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                setShowOTPScreen(true)\r\n            }\r\n        }).catch(err => {\r\n            setSpinning(false)\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const onOTPSubmit = () => {\r\n        setSpinningAll(true)\r\n        const user = JSON.parse(localStorage.getItem('user'))\r\n        axios.post(`${_services.baseURL}/superadmin/auth/verify`, {\r\n            PhoneNumber: user.PhoneNumber,\r\n            code: otp\r\n        }).then(resp => {\r\n            setSpinningAll(false)\r\n            props.history.push(\"/my-shops\")\r\n        }).catch(err => {\r\n            setSpinningAll(false)\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleChange = otp => {\r\n        setOTP(otp)\r\n    }\r\n\r\n    const logoStyle = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/logo.svg)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <div className=\"left-panel\">\r\n                <span className=\"login-logo\" style={logoStyle}></span>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <Spin spinning={spinningAll} >\r\n                    <Spin spinning={spinning} >\r\n                        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} >\r\n                            <Form>\r\n                                <div className=\"right-panel-title\">Login</div>\r\n                                <div className=\"field-label\">\r\n                                    Mobile Number\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"username\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"username\" onChange={() => setShowAlert(false)} autoComplete=\"off\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Mobile Number\" />\r\n                                </Form.Item>\r\n                                {\r\n                                    !showOTPScreen ? <div className='ant-form-item'>\r\n                                        <button type=\"submit\" className=\"login-btn\">Login</button>\r\n                                    </div> : null\r\n                                }\r\n                            </Form>\r\n                        </Formik>\r\n                    </Spin>\r\n                    {\r\n                        showOTPScreen ? <Formik initialValues={initialValues} onSubmit={onOTPSubmit} >\r\n                            <Form>\r\n                                <div className=\"field-label\" style={{ marginBottom: '5px' }} >\r\n                                    Enter OTP\r\n                        </div>\r\n                                <div id=\"otp-input-root\">\r\n                                    <OtpInput\r\n                                        value={otp}\r\n                                        onChange={handleChange}\r\n                                        numInputs={4}\r\n                                        isInputNum\r\n                                    />\r\n                                </div>\r\n                                <div className='ant-form-item'>\r\n                                    <button className=\"login-btn\">Submit</button>\r\n                                </div>\r\n                            </Form>\r\n                        </Formik> : null\r\n                    }\r\n                    {\r\n                        showAlert ? <div className=\"ant-form-item\">\r\n                            <Alert message=\"incorrect mobile number\" type=\"error\" showIcon closable />\r\n                        </div> : null\r\n                    }\r\n                    <div className=\"hyperlink-wrapper\">\r\n                        Not yet registered? <NavLink to=\"/\">Register</NavLink>\r\n                    </div>\r\n                </Spin>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menu.css'\r\nimport { Popover } from 'antd';\r\nconst logo = require('../../assets/images/WEQ-logo.svg');\r\nconst user = require('../../assets/images/user.svg');\r\n\r\nfunction Menu(props) {\r\n    const content = (\r\n        <div>\r\n            <p>\r\n                <NavLink activeClassName='activeMenuLink' exact to=\"/my-profile\">My Profile</NavLink>\r\n            </p>\r\n            <p>\r\n                <NavLink activeClassName='activeMenuLink' exact to=\"/login\">Signout</NavLink>\r\n            </p>\r\n        </div>\r\n    );\r\n    return (\r\n        <header id=\"header\" className=\"clearfix\">\r\n            <div className=\"ant-row\" style={{ 'flexFlow': \"nowrap\" }}>\r\n                <div className=\"ant-col ant-col-xs-24 ant-col-sm-24 ant-col-md-6 ant-col-lg-6 ant-col-xl-5 ant-col-xxl-4\">\r\n                    <h1><a id=\"logo\" href=\"/my-shops\"><img className=\"logo\" alt=\"logo\" src={logo} /></a></h1>\r\n                </div>\r\n                <div className=\"ant-col menu-row ant-col-xs-0 ant-col-sm-0 ant-col-md-18 ant-col-lg-18 ant-col-xl-19 ant-col-xxl-20\">\r\n                    <div id=\"search-box\" style={{ visibility: 'hidden' }}>\r\n                    </div>\r\n                    <ul className=\"ant-menu ant-menu-light menu-site ant-menu-root ant-menu-horizontal\" id=\"nav\" direction=\"ltr\" role=\"menu\">\r\n                        <li className=\"ant-menu-item ant-menu-item-only-child\" role=\"menuitem\">\r\n                            <NavLink activeClassName='activeMenuLink' exact to=\"/my-shops\">Home</NavLink>\r\n                        </li>\r\n                        <li className=\"ant-menu-item ant-menu-item-only-child\" role=\"menuitem\">\r\n                            <NavLink activeClassName='activeMenuLink' exact to=\"/add-shop\">Add Shop</NavLink>\r\n                        </li>\r\n                        <li className=\"ant-menu-item ant-menu-item-only-child\" role=\"menuitem\">\r\n                            <Popover placement=\"bottom\" title='' content={content} trigger=\"click\">\r\n                                <img className=\"logo1\" alt=\"logo\" src={user} />\r\n                            </Popover>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Menu","import React, { useState, useEffect } from 'react'\r\nimport './AddShop.css'\r\nimport { Formik } from 'formik'\r\nimport { Input, Form, TimePicker, Select } from 'formik-antd'\r\nimport * as Yup from 'yup'\r\nimport LocationPicker from 'react-location-picker'\r\nimport axios from 'axios'\r\nimport { Spin } from 'antd'\r\nimport _services from '../../utils/services'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\n\r\nfunction AddShop(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const initialValues = {\r\n        ShopName: '',\r\n        Category: '',\r\n        Email: '',\r\n        SecondaryContact: '',\r\n        BranchSupervisorRequired: false,\r\n        BranchSupervisorContact: '',\r\n        Building: '',\r\n        StreetName: '',\r\n        City: '',\r\n        State: '',\r\n        StartTime: '',\r\n        EndTime: '',\r\n        SlotDuration: '',\r\n        VisitorsInEachSlot: '',\r\n        MaximumBookingCount: '',\r\n        Pincode: '',\r\n        Country: ''\r\n    }\r\n\r\n    const handleLocationChange = values => {\r\n        setLocation(values.position)\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        ShopName: Yup.string().required('Shop Name required!'),\r\n        Category: Yup.string().required('Category required!'),\r\n        Building: Yup.string().required('Building required!'),\r\n        StreetName: Yup.string().required('Street Name required!'),\r\n        City: Yup.string().required('City required!'),\r\n        State: Yup.string().required('State required!'),\r\n        SlotDuration: Yup.number().required('Slot Duration required!'),\r\n        VisitorsInEachSlot: Yup.number().required('Visitors count required!'),\r\n        MaximumBookingCount: Yup.number().required('Maximum booking count required!'),\r\n        StartTime: Yup.string().nullable().required('Start Time required!'),\r\n        EndTime: Yup.string().nullable().required('End Time required!'),\r\n        Email: Yup.string().email('Invalid Email!'),\r\n        SecondaryContact: Yup.string().required('Mobile Number required!')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        console.log('values', values);\r\n        const _StartDateTime = new Date(values.StartTime)\r\n        const _StartTime = _StartDateTime.toLocaleTimeString('en-GB')\r\n        const _EndDateTime = new Date(values.EndTime)\r\n        const _EndTime = _EndDateTime.toLocaleTimeString('en-GB')\r\n        setIsLoading(true)\r\n\r\n        axios.post(`${_services.baseURL}/superadmin/branch/addbranch`, {\r\n            UserID: user.UserID,\r\n            BranchName: values.ShopName,\r\n            CategoryID: values.Category,\r\n            ClientID: user.ClientID,\r\n            BranchPhoneNumber: values.SecondaryContact,\r\n            BranchEmailID: values.Email,\r\n            IsBranchSupervisor: false,\r\n            AdminPhoneNumber: null,\r\n            BuildingNumber: values.Building,\r\n            StreetName: values.StreetName,\r\n            City: values.City,\r\n            State: values.State,\r\n            Country: values.Country,\r\n            Pincode: values.Pincode,\r\n            Latitude: location.lat,\r\n            Longitude: location.lng,\r\n            BranchStartTime: _StartTime,\r\n            BranchEndTime: _EndTime,\r\n            SlotInMinutes: values.SlotDuration,\r\n            MaximumBookingCount: values.MaximumBookingCount,\r\n            EntryInEachSlot: values.VisitorsInEachSlot,\r\n            WorkingDayList: '0,1,2,3,4,5,6',\r\n            BranchImage: null\r\n        }).then(resp => {\r\n            setIsLoading(false)\r\n            props.history.push(\"/my-shops\")\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [location, setLocation] = useState({\r\n        lat: 12.9716,\r\n        lng: 77.5946\r\n    })\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post(`${_services.baseURL}/superadmin/branch/getallcategories`, {\r\n            UserID: user.UserID\r\n        }).then(resp => {\r\n            let _categories = []\r\n            resp.data.data.forEach(element => {\r\n                const _category = new SelectOptions(element.CategoryID, element.CategoryName)\r\n                _categories.push(_category)\r\n            });\r\n            setCategories(_categories)\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n    useDocumentTitle('Add Shop')\r\n\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} >\r\n            <Form>\r\n                <Spin spinning={isLoading}>\r\n                    <div className='add-bracnch-section'>\r\n                        <div className='branch-details'>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        Shop Name\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"ShopName\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"ShopName\" autoComplete=\"off\" placeholder=\"Shop Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Shop Category\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Category\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Select name=\"Category\" options={categories} placeholder=\"Select Category\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ant-form-item\">\r\n                                Contact\r\n                        </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Mobile Number\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"SecondaryContact\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"SecondaryContact\" autoComplete=\"off\" placeholder=\"Mobile Number\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Email\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Email\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"Email\" autoComplete=\"off\" placeholder=\"Email\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ant-form-item\">\r\n                                Address\r\n                        </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        Building\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Building\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"Building\" autoComplete=\"off\" placeholder=\"Building\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Street Name\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"StreetName\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"StreetName\" autoComplete=\"off\" placeholder=\"Street Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        City\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"City\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"City\" autoComplete=\"off\" placeholder=\"City\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        State\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"State\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"State\" autoComplete=\"off\" placeholder=\"State\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        Pincode\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Pincode\"\r\n                                    >\r\n                                        <Input name=\"Pincode\" autoComplete=\"off\" placeholder=\"Pincode\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Country\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Country\"\r\n                                    >\r\n                                        <Input name=\"Country\" autoComplete=\"off\" placeholder=\"Country\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className='ant-col-xs-24'>\r\n                                <div className=\"field-label\">\r\n                                    Choose Location\r\n                        </div>\r\n                            </div>\r\n                            <div className='ant-col-xs-24'>\r\n                                <LocationPicker\r\n                                    containerElement={<div style={{ height: '100%' }} />}\r\n                                    mapElement={<div style={{ height: '400px' }} />}\r\n                                    defaultPosition={location}\r\n                                    onChange={handleLocationChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='slot-settings'>\r\n                            <div className='slot-settings-header ant-form-item'>Slot Settings</div>\r\n                            <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Working Days</div>\r\n                                <div className='settings-values'>\r\n                                    <div className='display-flex'>\r\n                                        <div className=\"selected-days\">M</div>\r\n                                        <div className=\"selected-days\">T</div>\r\n                                        <div className=\"selected-days\">W</div>\r\n                                        <div className=\"selected-days\">T</div>\r\n                                        <div className=\"selected-days\">F</div>\r\n                                        <div className=\"selected-days\">S</div>\r\n                                        <div className=\"selected-days\">S</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Working Start Time</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"StartTime\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <TimePicker style={{ width: '100%' }}\r\n                                            placeholder=\"Select Start Time\"\r\n                                            name='StartTime'\r\n                                            format='h:mm a'></TimePicker>\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Working End Time</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"EndTime\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <TimePicker style={{ width: '100%' }} placeholder=\"Select End Time\" name='EndTime' format='h:mm a'></TimePicker>\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Slot Duration</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"SlotDuration\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} name=\"SlotDuration\" autoComplete=\"off\" placeholder=\"Slot Duration in minutes\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Visitors Count in a Slot</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"VisitorsInEachSlot\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} name=\"VisitorsInEachSlot\" autoComplete=\"off\" placeholder=\"Visitors count in numbers\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Maximum no. of visitors in each booking</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"MaximumBookingCount\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} name=\"MaximumBookingCount\" autoComplete=\"off\" placeholder=\"Maximum no. of visitors in each booking\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className='ant-form-item'>\r\n                                <button className=\"login-btn\">Submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Spin>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nclass SelectOptions {\r\n    constructor(value, label) {\r\n        this.value = value\r\n        this.label = label\r\n    }\r\n}\r\n\r\nexport default AddShop","import { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport _services from '../../utils/services'\r\n\r\nexport const useHttpGet = (url, dependencies) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [fetchedData, setFetchedData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.get(`${_services.baseURL}${url}`).then(data => {\r\n            setFetchedData(data)\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, dependencies)\r\n\r\n    return [isLoading, fetchedData]\r\n}\r\n\r\nexport const useHttpPost = (url, req, dependencies) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [fetchedData, setFetchedData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post(`${_services.baseURL}${url}`, req).then(data => {\r\n            setFetchedData(data)\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, dependencies)\r\n\r\n    return [isLoading, fetchedData]\r\n}\r\n\r\nexport const useHttpPost_processData = (url, req, dependencies, processData) => {\r\n\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [fetchedData, setFetchedData] = useState(null)\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post(`${_services.baseURL}${url}`, req).then(data => {\r\n            setFetchedData(processData(data))\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, dependencies)\r\n\r\n    return [isLoading, fetchedData]\r\n}\r\n","import React from 'react'\r\nimport { Input } from 'antd'\r\n\r\nfunction Filter({ onSearch }) {\r\n    return (\r\n        <Input placeholder=\"Search here...\" allowClear onChange={(e) => onSearch(e.target.value)} />\r\n    )\r\n}\r\n\r\nexport default Filter","import React, { useState } from 'react'\r\nimport { Result } from 'antd'\r\nimport './MyShops.css'\r\nimport { Spin } from 'antd'\r\nimport _services from '../../utils/services'\r\nimport { useHttpPost } from '../hooks/http'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\nimport Filter from '../filter/Filter'\r\nconst logo = require('../../assets/images/Shopping Cart-ico.svg');\r\nconst pointer = require('../../assets/images/Pointer.svg');\r\n\r\nfunction MyShops(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const [filter, setFilter] = useState('')\r\n\r\n    useDocumentTitle('My Shops')\r\n    const [isLoading, fetchedData] = useHttpPost('/superadmin/branch/getallbranches', {\r\n        UserID: user.UserID,\r\n        ClientID: user.ClientID\r\n    }, [user.UserID, user.ClientID])\r\n\r\n    let filteredShops = fetchedData ? fetchedData.data.data.filter(element => {\r\n        return element.BranchName.toLowerCase().includes(filter.toLowerCase());\r\n    }) : []\r\n\r\n    const onSearch = (filter) => {\r\n        setFilter(filter)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        props.history.push(\"/add-shop\")\r\n    }\r\n\r\n    const handleShopClick = (shop) => {\r\n        _services.selectedShop = shop\r\n        props.history.push(\"/home\")\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Spin spinning={isLoading}>\r\n                <div className='filter'>\r\n                    <div className='booking-info-header'>Welcome to, </div>\r\n                    <div className='display-flex'>\r\n                        <div className='brand-name'>\r\n                            {\r\n                                user.ClientName\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <Filter onSearch={onSearch} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='shops-section'>\r\n                    {\r\n                        filteredShops && filteredShops.length ?\r\n                            <div className='shops-grid'>\r\n                                {\r\n                                    filteredShops.map((item, index) => {\r\n                                        return (\r\n                                            <div onClick={() => handleShopClick(item)} key={index} className='shop-grid-item'>\r\n                                                <div className='img'>\r\n                                                    <img alt=\"shop\" src={logo} />\r\n                                                </div>\r\n                                                <div className='info'>\r\n                                                    <div className='shop-names'>{item.BranchName}</div>\r\n                                                    <div>{item.CategoryName}</div>\r\n                                                    <div className='shop-address'><img alt='' src={pointer} />  {item.BuildingNumber} {item.StreetName} {item.City}  {item.State}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div> : <Result\r\n                                title=\"Your brand is empty. Please create a shop\"\r\n                                extra={\r\n                                    <button onClick={handleClick} className=\"weq-button\">Add Shop</button>\r\n                                }\r\n                            />\r\n                    }\r\n                </div>\r\n            </Spin>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MyShops\r\n","import React, { useState, useEffect } from 'react'\r\nimport './TodaysBookings.css'\r\nimport axios from 'axios'\r\nimport { Spin, Result } from 'antd'\r\nimport moment from 'moment'\r\nimport _services from '../../utils/services'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\n\r\nfunction TodaysBookings(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const [morningSlots, setMorningSlots] = useState([])\r\n    const [afternoonSlots, setAfternoonSlots] = useState([])\r\n    const [eveningSlots, setEveningSlots] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const groupBy = (array, key) => {\r\n        return array.reduce((result, currentValue) => {\r\n            (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n                currentValue\r\n            );\r\n            return result;\r\n        }, {});\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post(`${_services.baseURL}/superadmin/branch/getslotdetails`, {\r\n            BranchID: _services.selectedShop.BranchID,\r\n            UserID: user.UserID,\r\n            StartDate: moment(new Date()).format(_services.dateFormat_API),\r\n            EndDate: moment(new Date()).format(_services.dateFormat_API)\r\n        }).then(resp => {\r\n            const _slots = groupBy(resp.data.config, 'DaySequence')\r\n            setMorningSlots(_slots.Morning)\r\n            setAfternoonSlots(_slots.Afternoon)\r\n            setEveningSlots(_slots.Evening)\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n    useDocumentTitle('Todays Bookings')\r\n\r\n    return (\r\n        <Spin spinning={isLoading}>\r\n            <div className='slots-section'>\r\n                {\r\n                    isLoading ? <Result\r\n                        title='Loading...'\r\n                    /> : <React.Fragment>\r\n                            {\r\n                                morningSlots && morningSlots.length ? <div className='slots-heading'>\r\n                                    <span className='booked-timing'>Morning</span>\r\n                                    <span className='booked-count'>Booked 20/35</span>\r\n                                </div> : null\r\n                            }\r\n                            <div className='slots-grid'>\r\n                                {\r\n                                    morningSlots && morningSlots.map((item, _index) => {\r\n                                        return (\r\n                                            <div key={_index} className={item.BookedCount ? 'grid-item-booked' : 'grid-item'}>\r\n                                                <div>\r\n                                                    <span className='sl-no'>WEQ </span>\r\n                                                    <span className='booking-id'>{item.BookingUniqueID || (_index + 1)}</span>\r\n                                                </div>\r\n                                                <div className='display-flex'>\r\n                                                    <div className='ppl-count'>{item.BookedCount} People</div>\r\n                                                    <div className='duration'>\r\n                                                        {moment(item.SlotStartTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")} - {moment(item.SlotEndTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            {\r\n                                afternoonSlots && afternoonSlots.length ? <div className='slots-heading'>\r\n                                    <span className='booked-timing'>Afternoon</span>\r\n                                    <span className='booked-count'>Booked 20/35</span>\r\n                                </div> : null\r\n                            }\r\n                            <div className='slots-grid'>\r\n                                {\r\n                                    afternoonSlots && afternoonSlots.map((item, _index) => {\r\n                                        return (\r\n                                            <div key={_index} className={item.BookedCount ? 'grid-item-booked' : 'grid-item'}>\r\n                                                <div>\r\n                                                    <span className='sl-no'>WEQ </span>\r\n                                                    <span className='booking-id'>{item.BookingUniqueID || (_index + 1)}</span>\r\n                                                </div>\r\n                                                <div className='display-flex'>\r\n                                                    <div className='ppl-count'>{item.BookedCount} People</div>\r\n                                                    <div className='duration'>\r\n                                                        {moment(item.SlotStartTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")} - {moment(item.SlotEndTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            {\r\n                                eveningSlots && eveningSlots.length ? <div className='slots-heading'>\r\n                                    <span className='booked-timing'>Evening</span>\r\n                                    <span className='booked-count'>Booked 20/35</span>\r\n                                </div> : null\r\n                            }\r\n                            <div className='slots-grid'>\r\n                                {\r\n                                    eveningSlots && eveningSlots.map((item, _index) => {\r\n                                        return (\r\n                                            <div key={_index} className={item.BookedCount ? 'grid-item-booked' : 'grid-item'}>\r\n                                                <div>\r\n                                                    <span className='sl-no'>WEQ </span>\r\n                                                    <span className='booking-id'>{item.BookingUniqueID || (_index + 1)}</span>\r\n                                                </div>\r\n                                                <div className='display-flex'>\r\n                                                    <div className='ppl-count'>{item.BookedCount} People</div>\r\n                                                    <div className='duration'>\r\n                                                        {moment(item.SlotStartTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")} - {moment(item.SlotEndTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </React.Fragment>\r\n                }\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default TodaysBookings","import React, { useState, useEffect } from 'react'\r\nimport './PastBookings.css'\r\nimport { DatePicker, Input } from 'antd'\r\nimport axios from 'axios'\r\nimport { Spin, Result, Popover } from 'antd'\r\nimport moment from 'moment'\r\nimport _services from '../../utils/services'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction PastBookings(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    var currentDate = new Date()\r\n    const lastFiveDate = new Date(currentDate.setDate(currentDate.getDate() - 7))\r\n    const [startDate, setStartDate] = useState(moment(lastFiveDate, _services.dateFormat_UI))\r\n    const [endDate, setEndDate] = useState(moment(new Date(), _services.dateFormat_UI))\r\n    const [slots, setSlots] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [emptyTitle, setEmptyTitle] = useState('Loading...')\r\n\r\n    function onChange(dates) {\r\n        if (dates) {\r\n            setStartDate(dates[0])\r\n            setEndDate(dates[1])\r\n            setIsLoading(true)\r\n            axios.post(`${_services.baseURL}/superadmin/branch/getslotdetails`, {\r\n                BranchID: _services.selectedShop.BranchID,\r\n                UserID: user.UserID,\r\n                StartDate: moment(new Date(dates[0])).format(_services.dateFormat_API),\r\n                EndDate: moment(new Date(dates[1])).format(_services.dateFormat_API)\r\n            }).then(resp => {\r\n                let _slots = resp.data.data\r\n                _slots.map(item => {\r\n                    item.BookedDate = moment(new Date(item.SelectedDateRange)).format(_services.dateFormat_UI)\r\n                })\r\n                let uniqueBookedDates = [...new Set(_slots.map(item => item.BookedDate))];\r\n                let _newSlots = []\r\n                uniqueBookedDates.forEach(element => {\r\n                    let _slot = {\r\n                        date: element,\r\n                        data: _slots.filter(_element => element === _element.BookedDate)\r\n                    }\r\n                    _newSlots.push(_slot)\r\n                })\r\n                setSlots(_newSlots)\r\n                if (!_newSlots.length) {\r\n                    setEmptyTitle('No slots are booked between ' + moment(new Date(dates[0])).format(_services.dateFormat_UI) + ' and ' + moment(new Date(dates[1])).format(_services.dateFormat_UI))\r\n                }\r\n                setIsLoading(false)\r\n            }).catch(err => {\r\n                setIsLoading(false)\r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post(`${_services.baseURL}/superadmin/branch/getslotdetails`, {\r\n            BranchID: _services.selectedShop.BranchID,\r\n            UserID: user.UserID,\r\n            StartDate: moment(lastFiveDate).format(_services.dateFormat_API),\r\n            EndDate: moment(new Date()).format(_services.dateFormat_API)\r\n        }).then(resp => {\r\n            let _slots = resp.data.data\r\n            _slots.map(item => {\r\n                item.BookedDate = moment(new Date(item.SelectedDateRange)).format(_services.dateFormat_UI)\r\n            })\r\n            let uniqueBookedDates = [...new Set(_slots.map(item => item.BookedDate))];\r\n            let _newSlots = []\r\n            uniqueBookedDates.forEach(element => {\r\n                let _slot = {\r\n                    date: element,\r\n                    data: _slots.filter(_element => element === _element.BookedDate)\r\n                }\r\n                _newSlots.push(_slot)\r\n            })\r\n            setSlots(_newSlots)\r\n            if (!_newSlots.length) {\r\n                setEmptyTitle('No slots are booked between ' + moment(lastFiveDate).format(_services.dateFormat_UI) + ' and ' + moment(new Date()).format(_services.dateFormat_UI))\r\n            }\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            console.log('component will unmount');\r\n        };\r\n    }, [])\r\n\r\n    useDocumentTitle('Past Bookings')\r\n\r\n    const onSearch = (filter) => { }\r\n\r\n    const content = (item) => (\r\n        <div>\r\n            <p>Name: {item.UserName}</p>\r\n            <p>Mobile: {item.PhoneNumber}</p>\r\n            <p>Email: {item.UserEmail}</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Spin spinning={isLoading}>\r\n            <div className='visitors-section'>\r\n                <div className='display-flex'>\r\n                    <div style={{ 'flexGrow': 1 }}>\r\n                        <RangePicker\r\n                            defaultValue={[startDate, endDate]}\r\n                            format={_services.dateFormat_UI}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'none' }}>\r\n                        <Input placeholder=\"Enter visitor name\" allowClear onChange={(e) => onSearch(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    slots && slots.length ? slots.map((item, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <div className='date-header'>{item.date}</div>\r\n                                <div className='slots-grid'>\r\n                                    {\r\n                                        item.data.map((_item, _index) => {\r\n                                            return (\r\n                                                <Popover key={_index} content={() => content(_item)} title=\"Guest details\">\r\n                                                    <div key={_index} className='grid-item'>\r\n                                                        <div>\r\n                                                            <span className='sl-no'>{_item.UserName}</span>\r\n                                                        </div>\r\n                                                        <div className='display-flex'>\r\n                                                            <div className='ppl-count'>with {_item.BookedCount} visitors</div>\r\n                                                            <div className='duration'>\r\n                                                                {moment(_item.SlotStartTime || 0, [\"HH\"]).format(\"hh A\")} - {moment(_item.SlotEndTime || 0, [\"HH\"]).format(\"hh A\")}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popover>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )\r\n                    }) : <Result\r\n                            title={emptyTitle}\r\n                        />\r\n                }\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default PastBookings","import React from 'react'\r\nimport './Header.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport _services from '../../utils/services'\r\n\r\nfunction Header(props) {\r\n    const user = JSON.parse(localStorage.user)\r\n\r\n    return (\r\n        <header className=\"home-header\">\r\n            <div className=\"breadcrum\">\r\n                Home / <NavLink exact to='/my-shops'>{user.ClientName}</NavLink>\r\n            </div>\r\n            <div className=\"shop-name\">\r\n                {_services.selectedShop.BranchName}\r\n            </div>\r\n            <div className='sub-menu'>\r\n                <NavLink activeClassName='activeMenuLink' exact to='/home'>Today’s Bookings</NavLink>\r\n                <NavLink activeClassName='activeMenuLink' exact to='/home/pastbookings'>Past Bookings</NavLink>\r\n                <NavLink activeClassName='activeMenuLink' exact to='/home/shopinfo'>Shop Info</NavLink>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react'\r\nimport LocationPicker from 'react-location-picker'\r\nimport { Spin, Result } from 'antd'\r\nimport moment from 'moment'\r\nimport _services from '../../utils/services'\r\nimport { useHttpPost, useHttpPost_processData } from '../hooks/http'\r\nimport { Formik } from 'formik'\r\nimport { Input, Form, TimePicker, Select } from 'formik-antd'\r\nimport * as Yup from 'yup'\r\nimport useDocumentTitle from '../hooks/useDocumentTitle'\r\nimport axios from 'axios'\r\n\r\nfunction ShopInfo(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n\r\n    const [loading, setLoading] = useState(false)\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [isLoading, fetchedData] = useHttpPost('/superadmin/branch/getbranch_id', {\r\n        BranchID: _services.selectedShop.BranchID,\r\n        UserID: user.UserID\r\n    }, [_services.selectedShop.BranchID, user.UserID])\r\n\r\n    useDocumentTitle('Shop Info')\r\n\r\n    const processData = (fetchedData) => {\r\n        let categories = []\r\n        fetchedData.data.data.forEach(element => {\r\n            const category = new SelectOptions(element.CategoryID, element.CategoryName)\r\n            categories.push(category)\r\n        });\r\n        return categories\r\n    }\r\n\r\n    const [_isLoading, categories] = useHttpPost_processData('/superadmin/branch/getallcategories', {\r\n        UserID: user.UserID\r\n    }, [user.UserID], processData)\r\n\r\n    const shopDetails = fetchedData ? fetchedData.data.data[0] : null\r\n\r\n    const location = fetchedData ? {\r\n        lat: fetchedData.data.data[0].Latitude,\r\n        lng: fetchedData.data.data[0].Longitude\r\n    } : {\r\n            lat: 12.9716,\r\n            lng: 77.5946\r\n        }\r\n\r\n    const handleLocationChange = values => {\r\n        console.log(values)\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        ShopName: Yup.string().required('Shop Name required!'),\r\n        Category: Yup.string().required('Category required!'),\r\n        Building: Yup.string().required('Building required!'),\r\n        StreetName: Yup.string().required('Street Name required!'),\r\n        City: Yup.string().required('City required!'),\r\n        State: Yup.string().required('State required!'),\r\n        SlotDuration: Yup.number().required('Slot Duration required!'),\r\n        VisitorsInEachSlot: Yup.number().required('Visitors count required!'),\r\n        MaximumBookingCount: Yup.number().required('Maximum booking count required!'),\r\n        StartTime: Yup.string().nullable().required('Start Time required!'),\r\n        EndTime: Yup.string().nullable().required('End Time required!'),\r\n        Email: Yup.string().email('Invalid Email!'),\r\n        SecondaryContact: Yup.string().required('Mobile Number required!')\r\n    })\r\n\r\n    const onSubmit = (values) => {\r\n        setLoading(true)\r\n        console.log(values)\r\n        const _StartDateTime = new Date(values.StartTime)\r\n        const _StartTime = _StartDateTime.toLocaleTimeString('en-GB')\r\n        const _EndDateTime = new Date(values.EndTime)\r\n        const _EndTime = _EndDateTime.toLocaleTimeString('en-GB')\r\n\r\n        axios.post(`${_services.baseURL}/superadmin/branch/editbranch`, {\r\n            BranchID: shopDetails.BranchID,\r\n            UserID: user.UserID,\r\n            BranchName: values.ShopName,\r\n            CategoryID: values.Category,\r\n            ClientID: user.ClientID,\r\n            BranchPhoneNumber: values.SecondaryContact,\r\n            BranchEmailID: values.Email,\r\n            IsBranchSupervisor: false,\r\n            AdminPhoneNumber: null,\r\n            AdminUserID: null,\r\n            BuildingNumber: values.Building,\r\n            StreetName: values.StreetName,\r\n            City: values.City,\r\n            State: values.State,\r\n            Country: values.Country,\r\n            Pincode: values.Pincode,\r\n            Latitude: location.lat,\r\n            Longitude: location.lng,\r\n            BranchStartTime: _StartTime,\r\n            BranchEndTime: _EndTime,\r\n            SlotInMinutes: values.SlotDuration,\r\n            MaximumBookingCount: values.MaximumBookingCount,\r\n            EntryInEachSlot: values.VisitorsInEachSlot,\r\n            WorkingDayList: '0,1,2,3,4,5,6',\r\n            BranchImage: null\r\n        }).then(resp => {\r\n            setLoading(false)\r\n            props.history.push(\"/my-shops\")\r\n        }).catch(err => {\r\n            setLoading(false)\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    return (\r\n        <Spin spinning={isLoading}>\r\n            {\r\n                shopDetails && categories ?\r\n                    <Formik\r\n                        initialValues={{\r\n                            ShopName: shopDetails.BranchName,\r\n                            Category: shopDetails.CategoryID,\r\n                            SecondaryContact: shopDetails.BranchPhoneNumber,\r\n                            Email: shopDetails.BranchEmailID,\r\n                            Building: shopDetails.BuildingNumber,\r\n                            StreetName: shopDetails.StreetName,\r\n                            City: shopDetails.City,\r\n                            State: shopDetails.State,\r\n                            Pincode: shopDetails.Pincode,\r\n                            Country: shopDetails.Country,\r\n                            SlotDuration: shopDetails.SlotInMinutes,\r\n                            VisitorsInEachSlot: shopDetails.EntryInEachSlot,\r\n                            MaximumBookingCount: shopDetails.MaximumBookingCount,\r\n                            StartTime: moment(shopDetails.BranchStartTime, 'h:mm A'),\r\n                            EndTime: moment(shopDetails.BranchEndTime, 'h:mm A')\r\n                        }}\r\n                        validationSchema={validationSchema}\r\n                        onSubmit={onSubmit} >\r\n                        <Form>\r\n                            <div className='add-bracnch-section'>\r\n                                {\r\n                                    shopDetails ?\r\n                                        <React.Fragment>\r\n                                            <div className='branch-details'>\r\n                                                <div className=\"ant-form-item\">\r\n                                                    Contact\r\n                        </div>\r\n                                                {\r\n                                                    showEdit ? <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                        <div className='ant-col-xs-12' style={{ paddingRight: '8px' }}>\r\n                                                            <div className=\"field-label\">\r\n                                                                Shop Name\r\n</div>\r\n                                                            <Form.Item\r\n                                                                name=\"ShopName\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"ShopName\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    placeholder=\"Shop Name\" />\r\n                                                            </Form.Item>\r\n                                                        </div>\r\n                                                        <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                                            <div className=\"field-label\">\r\n                                                                Shop Category\r\n</div>\r\n                                                            <Form.Item\r\n                                                                name=\"Category\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Select name=\"Category\" options={categories}\r\n                                                                    placeholder=\"Select Category\" />\r\n                                                            </Form.Item>\r\n                                                        </div>\r\n                                                    </div> : null\r\n                                                }\r\n\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingRight: '8px' }}>\r\n                                                        <div className=\"field-label\">\r\n                                                            Mobile Number\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"SecondaryContact\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"SecondaryContact\"\r\n                                                                    autoComplete=\"off\"\r\n                                                                    placeholder=\"Mobile Number\" />\r\n                                                            </Form.Item> : <span>+91 {shopDetails.BranchPhoneNumber}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                                        <div className=\"field-label\">\r\n                                                            Email\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"Email\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"Email\" autoComplete=\"off\" placeholder=\"Email\" />\r\n                                                            </Form.Item> : <span>{shopDetails.BranchEmailID}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"ant-form-item\">\r\n                                                    Address\r\n                        </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                                        <div className=\"field-label\">\r\n                                                            Building\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"Building\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"Building\" autoComplete=\"off\" placeholder=\"Building\" />\r\n                                                            </Form.Item> : <span>{shopDetails.BuildingNumber}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                                        <div className=\"field-label\">\r\n                                                            Street Name\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"StreetName\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"StreetName\" autoComplete=\"off\" placeholder=\"Street Name\" />\r\n                                                            </Form.Item> : <span>{shopDetails.StreetName}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                                        <div className=\"field-label\">\r\n                                                            City\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"City\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"City\" autoComplete=\"off\" placeholder=\"City\" />\r\n                                                            </Form.Item> : <span>{shopDetails.City}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                                        <div className=\"field-label\">\r\n                                                            State\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"State\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"State\" autoComplete=\"off\" placeholder=\"State\" />\r\n                                                            </Form.Item> : <span>{shopDetails.State}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                                        <div className=\"field-label\">\r\n                                                            Pincode\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"Pincode\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"Pincode\" autoComplete=\"off\" placeholder=\"Pincode\" />\r\n                                                            </Form.Item> : <span>{shopDetails.Pincode}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                    <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                                        <div className=\"field-label\">\r\n                                                            Country\r\n                        </div>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"Country\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    name=\"Country\" autoComplete=\"off\" placeholder=\"Country\" />\r\n                                                            </Form.Item> : <span>{shopDetails.Country}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-col-xs-24'>\r\n                                                    <LocationPicker\r\n                                                        containerElement={<div style={{ height: '100%' }} />}\r\n                                                        mapElement={<div style={{ height: '400px' }} />}\r\n                                                        defaultPosition={location}\r\n                                                        onChange={handleLocationChange}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                            <div className='slot-settings'>\r\n                                                <div className='slot-settings-header ant-form-item'>Slot Settings</div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='settings-label'>Working Days</div>\r\n                                                    <div className='settings-values'>\r\n                                                        <div className='display-flex'>\r\n                                                            <div className=\"selected-days\">M</div>\r\n                                                            <div className=\"selected-days\">T</div>\r\n                                                            <div className=\"selected-days\">W</div>\r\n                                                            <div className=\"selected-days\">T</div>\r\n                                                            <div className=\"selected-days\">F</div>\r\n                                                            <div className=\"selected-days\">S</div>\r\n                                                            <div className=\"selected-days\">S</div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='settings-label'>Working Start Time</div>\r\n                                                    <div className='settings-values'>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"StartTime\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <TimePicker style={{ width: '100%' }}\r\n                                                                    placeholder=\"Select Start Time\"\r\n                                                                    name='StartTime'\r\n                                                                    format='h:mm A'></TimePicker>\r\n                                                            </Form.Item> : <span>{moment(shopDetails.BranchStartTime || 0, [\"HH\"]).format(\"h:mm A\")}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='settings-label'>Working End Time</div>\r\n                                                    <div className='settings-values'>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"EndTime\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <TimePicker style={{ width: '100%' }}\r\n                                                                    placeholder=\"Select End Time\"\r\n                                                                    name='EndTime'\r\n                                                                    format='h:mm A'></TimePicker>\r\n                                                            </Form.Item> : <span>{moment(shopDetails.BranchEndTime || 0, [\"HH\"]).format(\"h:mm A\")}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='settings-label'>Slot Duration</div>\r\n                                                    <div className='settings-values'>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"SlotDuration\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    style={{ width: '100%' }} name=\"SlotDuration\" autoComplete=\"off\" placeholder=\"Slot Duration in minutes\" />\r\n                                                            </Form.Item> : <span>{shopDetails.SlotInMinutes} minutes</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='settings-label'>Visitors Count in a Slot</div>\r\n                                                    <div className='settings-values'>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"VisitorsInEachSlot\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    style={{ width: '100%' }} name=\"VisitorsInEachSlot\" autoComplete=\"off\" placeholder=\"Visitors count in numbers\" />\r\n                                                            </Form.Item> : <span>{shopDetails.EntryInEachSlot}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                                    <div className='settings-label'>Maximum no. of visitors in each booking</div>\r\n                                                    <div className='settings-values'>\r\n                                                        {\r\n                                                            showEdit ? <Form.Item\r\n                                                                name=\"MaximumBookingCount\"\r\n                                                                hasFeedback\r\n                                                                showValidateSuccess\r\n                                                            >\r\n                                                                <Input\r\n                                                                    style={{ width: '100%' }} name=\"MaximumBookingCount\" autoComplete=\"off\" placeholder=\"Maximum no. of visitors in each booking\" />\r\n                                                            </Form.Item> : <span>{shopDetails.MaximumBookingCount}</span>\r\n                                                        }\r\n                                                    </div>\r\n                                                </div>\r\n                                                {\r\n                                                    showEdit ? <div className='ant-form-item'>\r\n                                                        <button type=\"submit\" className=\"login-btn\">Submit</button>\r\n                                                    </div> : <div className='ant-form-item'>\r\n                                                            <div onClick={() => setShowEdit(true)} className=\"login-btn\">Edit Shop Details</div>\r\n                                                        </div>\r\n                                                }\r\n                                            </div>\r\n                                        </React.Fragment> : null\r\n                                }\r\n                            </div>\r\n                        </Form>\r\n                    </Formik > : <Result\r\n                        title='Loading...'\r\n                    />\r\n                // \r\n                //     <div className='add-bracnch-section'></div>\r\n                // </Spin>\r\n            }\r\n        </Spin>\r\n    )\r\n}\r\n\r\nclass SelectOptions {\r\n    constructor(value, label) {\r\n        this.value = value\r\n        this.label = label\r\n    }\r\n}\r\n\r\nexport default ShopInfo","import React, { useEffect } from 'react';\r\nimport { Route, Redirect } from 'react-router-dom'\r\n\r\nconst ProtectedRoute = ({ Component, isAuthenticated, ...rest }) => {\r\n\r\n    return (<Route {...rest} render={(props) => (\r\n        isAuthenticated ?\r\n            (<Component {...props} />)\r\n            :\r\n            (<Redirect to='/login' />)\r\n    )} ></Route>)\r\n\r\n}\r\n\r\nexport default ProtectedRoute;","import React from 'react'\r\nimport { Switch } from 'react-router-dom'\r\nimport TodaysBookings from '../TodaysBookings/TodaysBookings';\r\nimport PastBookings from '../PastBookings/PastBookings';\r\nimport Header from '../Header/Header'\r\nimport ShopInfo from '../ShopInfo/ShopInfo';\r\nimport ProtectedRoute from '../router/ProtectedRoute';\r\nimport _services from '../../utils/services';\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div style={{ backgroundColor: '#ECF2F5', minHeight: 'calc(100vh - 64px)' }}>\r\n            <Header></Header>\r\n            <Switch>\r\n                <ProtectedRoute exact\r\n                    path={`${props.match.path}`}\r\n                    Component={TodaysBookings}\r\n                    isAuthenticated={_services.isAuthenticated}\r\n                    {...props} />\r\n                <ProtectedRoute exact\r\n                    path={`${props.match.path}/pastbookings`}\r\n                    Component={PastBookings}\r\n                    isAuthenticated={_services.isAuthenticated}\r\n                    {...props} />\r\n                <ProtectedRoute exact\r\n                    path={`${props.match.path}/shopinfo`}\r\n                    Component={ShopInfo}\r\n                    isAuthenticated={_services.isAuthenticated}\r\n                    {...props} />\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\nimport { Result } from 'antd'\r\n\r\nfunction MyProfile(props) {\r\n\r\n    return (\r\n        <div>\r\n            <Result\r\n                title='Page under development..'\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyProfile","import React from 'react';\r\nimport { BrowserRouter, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Register from '../Register/Register';\r\nimport Login from '../Login/Login';\r\nimport Menu from '../Menu/Menu'\r\nimport AddShop from '../AddShop/AddShop';\r\nimport MyShops from '../MyShops/MyShops';\r\nimport Home from '../Home/Home';\r\nimport _services from '../../utils/services';\r\nimport MyProfile from '../MyProfile/MyProfile';\r\nimport ProtectedRoute from './ProtectedRoute';\r\n\r\nconst Router = (props) => {\r\n    return (\r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route exact path='/login' component={Login} ></Route>\r\n                <Route exact path='/' component={Register} ></Route>\r\n                <React.Fragment>\r\n                    <Menu />\r\n                    <ProtectedRoute exact\r\n                        path='/my-shops'\r\n                        Component={MyShops}\r\n                        isAuthenticated={_services.isAuthenticated}\r\n                        {...props} />\r\n                    <ProtectedRoute exact\r\n                        path='/add-shop'\r\n                        Component={AddShop}\r\n                        isAuthenticated={_services.isAuthenticated}\r\n                        {...props} />\r\n                    <ProtectedRoute exact\r\n                        path='/my-profile'\r\n                        component={MyProfile}\r\n                        isAuthenticated={_services.isAuthenticated}\r\n                        {...props} />\r\n                    <Route path='/home' render={(props) => (\r\n                        _services.selectedShop !== null ? (<Home {...props} />) : (<Redirect to='/my-shops' />)\r\n                    )} />\r\n                </React.Fragment>\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}\r\n\r\nexport default Router","import React from 'react';\r\nimport './App.css';\r\nimport \"antd/dist/antd.css\"\r\nimport Router from './components/router/Router';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router />\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}