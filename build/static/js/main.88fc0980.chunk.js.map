{"version":3,"sources":["assets/images/WEQ-logo.svg","assets/images/Shopping Cart-ico.svg","assets/images/Pointer.svg","components/Register/Register.js","components/Login/Login.js","components/Menu/Menu.js","components/AddShop/AddShop.js","utils/services.js","components/MyShops/MyShops.js","components/TodaysBookings/TodaysBookings.js","components/PastBookings/PastBookings.js","components/Header/Header.js","components/ShopInfo/ShopInfo.js","components/Home/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Register","props","initialValues","ClientName","FirstName","LastName","PhoneNumber","otp","useState","setOTP","spinning","setSpinning","spinningAll","setSpinningAll","showOTPScreen","setShowOTPScreen","showAlert","setShowAlert","validationSchema","Yup","required","bgStyle","backgroundImage","process","logoStyle","className","style","onSubmit","values","axios","post","UserEmail","then","resp","data","IsExist","user","Name","RoleID","UserID","ClientID","localStorage","setItem","JSON","stringify","catch","err","console","log","Item","name","hasFeedback","showValidateSuccess","autoComplete","placeholder","onChange","type","parse","getItem","code","history","push","marginBottom","id","value","numInputs","isInputNum","message","showIcon","closable","to","Login","username","prefix","UserOutlined","logo","require","Menu","href","alt","src","visibility","direction","role","activeClassName","exact","SelectOptions","label","this","AddShop","ShopName","Category","Building","StreetName","City","State","SlotDuration","VisitorsInEachSlot","MaximumBookingCount","StartTime","nullable","EndTime","Email","email","SecondaryContact","categories","setCategories","isLoading","setIsLoading","lat","lng","location","setLocation","useEffect","_categories","forEach","element","_category","CategoryID","CategoryName","BranchSupervisorRequired","BranchSupervisorContact","Pincode","Country","_StartTime","Date","toLocaleTimeString","_EndTime","BranchName","BranchPhoneNumber","BranchEmailID","IsBranchSupervisor","AdminPhoneNumber","BuildingNumber","Latitude","Longitude","BranchStartTime","BranchEndTime","SlotInMinutes","EntryInEachSlot","WorkingDayList","BranchImage","display","paddingRight","paddingLeft","options","containerElement","height","mapElement","defaultPosition","position","width","format","_services","selectedShop","pointer","MyShops","shops","setShops","filter","setFilter","filteredShops","toLowerCase","includes","Fragment","allowClear","e","onSearch","target","length","map","item","index","onClick","shop","key","title","extra","TodaysBookings","morningSlots","setMorningSlots","afternoonSlots","setAfternoonSlots","eveningSlots","setEveningSlots","BranchID","StartDate","moment","EndDate","array","_slots","config","reduce","result","currentValue","Morning","Afternoon","Evening","_index","BookedCount","BookingUniqueID","SlotStartTime","SlotEndTime","RangePicker","DatePicker","PastBookings","currentDate","lastFiveDate","setDate","getDate","startDate","setStartDate","endDate","setEndDate","slots","setSlots","emptyTitle","setEmptyTitle","BookedDate","SelectedDateRange","uniqueBookedDates","Set","_newSlots","_slot","date","_element","defaultValue","dates","_item","content","UserName","Header","ShopInfo","shopDetails","setShopDetails","Home","backgroundColor","minHeight","path","component","App","render","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.88fc0980.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/WEQ-logo.081c1cf8.svg\";","module.exports = __webpack_public_path__ + \"static/media/Shopping Cart-ico.0f4db4a5.svg\";","module.exports = __webpack_public_path__ + \"static/media/Pointer.bb4ed5c4.svg\";","import React, { useState } from 'react'\r\nimport { Formik } from 'formik'\r\nimport './Register.css'\r\nimport { Input, Form } from 'formik-antd'\r\nimport * as Yup from 'yup'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Spin, Alert } from 'antd'\r\nimport OtpInput from 'react-otp-input'\r\nimport axios from 'axios'\r\n\r\nfunction Register(props) {\r\n\r\n    const initialValues = {\r\n        ClientName: '',\r\n        FirstName: '',\r\n        LastName: '',\r\n        PhoneNumber: '',\r\n        otp: ''\r\n    }\r\n\r\n    const [otp, setOTP] = useState('')\r\n    const [spinning, setSpinning] = useState(false)\r\n    const [spinningAll, setSpinningAll] = useState(false)\r\n    const [showOTPScreen, setShowOTPScreen] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n\r\n\r\n    const validationSchema = Yup.object({\r\n        PhoneNumber: Yup.string().required('Mobile Number required!'),\r\n        ClientName: Yup.string().required('Brand Name required!'),\r\n        FirstName: Yup.string().required('First Name required!'),\r\n        LastName: Yup.string().required('Last Name required!')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        setSpinning(true)\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/auth/register', {\r\n            ClientName: values.ClientName,\r\n            FirstName: values.FirstName,\r\n            LastName: values.LastName,\r\n            UserEmail: '',\r\n            PhoneNumber: values.PhoneNumber\r\n        }).then(resp => {\r\n            setSpinning(false)\r\n            if (resp.data.IsExist) {\r\n                setShowAlert(true)\r\n            } else {\r\n                const user = {\r\n                    Name: resp.data.otp.Name,\r\n                    PhoneNumber: values.PhoneNumber,\r\n                    RoleID: resp.data.otp.RoleID,\r\n                    UserID: resp.data.otp.UserID,\r\n                    ClientID: resp.data.otp.ClientID,\r\n                    ClientName: resp.data.otp.ClientName\r\n                }\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                setShowOTPScreen(true)\r\n            }\r\n        }).catch(err => {\r\n            setSpinning(false)\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const onOTPSubmit = values => {\r\n        setSpinningAll(true)\r\n        const user = JSON.parse(localStorage.getItem('user'))\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/auth/verify', {\r\n            PhoneNumber: user.PhoneNumber,\r\n            code: otp\r\n        }).then(resp => {\r\n            setSpinningAll(false)\r\n            props.history.push(\"/add-shop\")\r\n        }).catch(err => {\r\n            setSpinningAll(false)\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    const handleChange = otp => {\r\n        setOTP(otp)\r\n    }\r\n\r\n    const changePhoneNumber = () => {\r\n        setShowAlert(false)\r\n    }\r\n\r\n    const bgStyle = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/login-bg.svg)`\r\n    }\r\n\r\n    const logoStyle = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/logo.svg)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <div className=\"left-panel\" style={bgStyle}>\r\n                <span className=\"login-logo\" style={logoStyle}></span>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <Spin spinning={spinningAll} >\r\n                    <Spin spinning={spinning} >\r\n                        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} >\r\n                            <Form>\r\n                                <div className=\"right-panel-title\">Create your WeQ Account</div>\r\n                                <div className=\"field-label\">\r\n                                    Brand Name\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"ClientName\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"ClientName\" autoComplete=\"off\" placeholder=\"Brand Name\" />\r\n                                </Form.Item>\r\n                                <div className=\"field-label\">\r\n                                    First Name\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"FirstName\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"FirstName\" autoComplete=\"off\" placeholder=\"First Name\" />\r\n                                </Form.Item>\r\n                                <div className=\"field-label\">\r\n                                    Last Name\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"LastName\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"LastName\" autoComplete=\"off\" placeholder=\"Last Name\" />\r\n                                </Form.Item>\r\n                                <div className=\"field-label\">\r\n                                    Mobile Number\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"PhoneNumber\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"PhoneNumber\" autoComplete=\"off\" onChange={changePhoneNumber} placeholder=\"Mobile Number\" />\r\n                                </Form.Item>\r\n                                {\r\n                                    !showOTPScreen ? <div className='ant-row ant-form-item'>\r\n                                        <button type=\"submit\" className=\"login-btn\">Create Account</button>\r\n                                    </div> : null\r\n                                }\r\n                            </Form>\r\n                        </Formik>\r\n                    </Spin>\r\n                    {\r\n                        showOTPScreen ? <Formik initialValues={initialValues} onSubmit={onOTPSubmit} >\r\n                            <Form>\r\n                                <div className=\"field-label\" style={{ marginBottom: '5px' }} >\r\n                                    Enter OTP\r\n                        </div>\r\n                                <div id=\"otp-input-root\">\r\n                                    <OtpInput\r\n                                        value={otp}\r\n                                        onChange={handleChange}\r\n                                        numInputs={4}\r\n                                        isInputNum\r\n                                    />\r\n                                </div>\r\n                                <div className='ant-form-item'>\r\n                                    <button className=\"login-btn\">Submit</button>\r\n                                </div>\r\n                            </Form>\r\n                        </Formik> : null\r\n                    }{\r\n                        showAlert ? <div className=\"ant-form-item\">\r\n                            <Alert message=\"This mobile number/Brand Name already in use. Please try with a different one.\" type=\"error\" showIcon closable />\r\n                        </div> : null\r\n                    }\r\n                    <div className=\"hyperlink-wrapper\">\r\n                        Already have an Account? <NavLink to=\"/login\">Login</NavLink>\r\n                    </div>\r\n                </Spin>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Register","import React, { useState } from 'react'\r\nimport { Formik } from 'formik'\r\nimport './Login.css'\r\nimport { Input, Form } from 'formik-antd'\r\nimport * as Yup from 'yup'\r\nimport { UserOutlined } from '@ant-design/icons'\r\nimport { NavLink } from 'react-router-dom'\r\nimport { Spin, Alert } from 'antd';\r\nimport OtpInput from 'react-otp-input';\r\nimport axios from 'axios'\r\n\r\nfunction Login(props) {\r\n\r\n    const initialValues = {\r\n        username: '',\r\n        otp: ''\r\n    }\r\n\r\n    const [otp, setOTP] = useState('')\r\n    const [spinning, setSpinning] = useState(false)\r\n    const [spinningAll, setSpinningAll] = useState(false)\r\n    const [showOTPScreen, setShowOTPScreen] = useState(false)\r\n    const [showAlert, setShowAlert] = useState(false)\r\n\r\n    const validationSchema = Yup.object({\r\n        username: Yup.string().required('Mobile Number required!')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        setSpinning(true)\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/auth/login', {\r\n            PhoneNumber: values.username\r\n        }).then(resp => {\r\n            setSpinning(false)\r\n            if (!resp.data.IsExist) {\r\n                setShowAlert(true)\r\n            } else {\r\n                const user = {\r\n                    Name: resp.data.otp.Name,\r\n                    PhoneNumber: values.username,\r\n                    RoleID: resp.data.otp.RoleID,\r\n                    UserID: resp.data.otp.UserID,\r\n                    ClientID: resp.data.otp.ClientID,\r\n                    ClientName: resp.data.otp.ClientName\r\n                }\r\n                localStorage.setItem('user', JSON.stringify(user))\r\n                setShowOTPScreen(true)\r\n            }\r\n        }).catch(err => {\r\n            setSpinning(false)\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const onOTPSubmit = () => {\r\n        setSpinningAll(true)\r\n        const user = JSON.parse(localStorage.getItem('user'))\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/auth/verify', {\r\n            PhoneNumber: user.PhoneNumber,\r\n            code: otp\r\n        }).then(resp => {\r\n            setSpinningAll(false)\r\n            props.history.push(\"/my-shops\")\r\n        }).catch(err => {\r\n            setSpinningAll(false)\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const handleChange = otp => {\r\n        setOTP(otp)\r\n    }\r\n\r\n    const changeUserName = () => {\r\n        setShowAlert(false)\r\n    }\r\n\r\n    const bgStyle = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/login-bg.svg)`\r\n    }\r\n\r\n    const logoStyle = {\r\n        backgroundImage: `url(${process.env.PUBLIC_URL}/logo.svg)`\r\n    }\r\n\r\n    return (\r\n        <div className=\"login-wrapper\">\r\n            <div className=\"left-panel\" style={bgStyle}>\r\n                <span className=\"login-logo\" style={logoStyle}></span>\r\n            </div>\r\n            <div className=\"right-panel\">\r\n                <Spin spinning={spinningAll} >\r\n                    <Spin spinning={spinning} >\r\n                        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} >\r\n                            <Form>\r\n                                <div className=\"right-panel-title\">Login</div>\r\n                                <div className=\"field-label\">\r\n                                    Mobile Number\r\n                        </div>\r\n                                <Form.Item\r\n                                    name=\"username\"\r\n                                    hasFeedback\r\n                                    showValidateSuccess\r\n                                >\r\n                                    <Input name=\"username\" onChange={changeUserName} autoComplete=\"off\" prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Mobile Number\" />\r\n                                </Form.Item>\r\n                                {\r\n                                    !showOTPScreen ? <div className='ant-form-item'>\r\n                                        <button type=\"submit\" className=\"login-btn\">Login</button>\r\n                                    </div> : null\r\n                                }\r\n                            </Form>\r\n                        </Formik>\r\n                    </Spin>\r\n                    {\r\n                        showOTPScreen ? <Formik initialValues={initialValues} onSubmit={onOTPSubmit} >\r\n                            <Form>\r\n                                <div className=\"field-label\" style={{ marginBottom: '5px' }} >\r\n                                    Enter OTP\r\n                        </div>\r\n                                <div id=\"otp-input-root\">\r\n                                    <OtpInput\r\n                                        value={otp}\r\n                                        onChange={handleChange}\r\n                                        numInputs={4}\r\n                                        isInputNum\r\n                                    />\r\n                                </div>\r\n                                <div className='ant-form-item'>\r\n                                    <button className=\"login-btn\">Submit</button>\r\n                                </div>\r\n                            </Form>\r\n                        </Formik> : null\r\n                    }\r\n                    {\r\n                        showAlert ? <div className=\"ant-form-item\">\r\n                            <Alert message=\"incorrect mobile number\" type=\"error\" showIcon closable />\r\n                        </div> : null\r\n                    }\r\n                    <div className=\"hyperlink-wrapper\">\r\n                        Not yet registered? <NavLink to=\"/\">Register</NavLink>\r\n                    </div>\r\n                </Spin>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default Login","import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\nimport './Menu.css'\r\nconst logo = require('../../assets/images/WEQ-logo.svg');\r\n\r\nfunction Menu(props) {\r\n    return (\r\n        <header id=\"header\" className=\"clearfix\">\r\n            <div className=\"ant-row\" style={{ 'flexFlow': \"nowrap\" }}>\r\n                <div className=\"ant-col ant-col-xs-24 ant-col-sm-24 ant-col-md-6 ant-col-lg-6 ant-col-xl-5 ant-col-xxl-4\">\r\n                    <h1><a id=\"logo\" href=\"/my-shops\"><img className=\"logo\" alt=\"logo\" src={logo} /></a></h1>\r\n                </div>\r\n                <div className=\"ant-col menu-row ant-col-xs-0 ant-col-sm-0 ant-col-md-18 ant-col-lg-18 ant-col-xl-19 ant-col-xxl-20\">\r\n                    <div id=\"search-box\" style={{ visibility: 'hidden' }}>\r\n                    </div>\r\n                    <ul className=\"ant-menu ant-menu-light menu-site ant-menu-root ant-menu-horizontal\" id=\"nav\" direction=\"ltr\" role=\"menu\">\r\n                        {/* <li className=\"ant-menu-item ant-menu-item-only-child\" role=\"menuitem\">\r\n                            <NavLink activeClassName='activeMenuLink' exact to=\"/home\">Home</NavLink>\r\n                        </li> */}\r\n                        <li className=\"ant-menu-item ant-menu-item-only-child\" role=\"menuitem\">\r\n                            <NavLink activeClassName='activeMenuLink' exact to=\"/my-shops\">Home</NavLink>\r\n                        </li>\r\n                        <li className=\"ant-menu-item ant-menu-item-only-child\" role=\"menuitem\">\r\n                            <NavLink activeClassName='activeMenuLink' exact to=\"/add-shop\">Add Shop</NavLink>\r\n                        </li>\r\n                        <li className=\"ant-menu-item ant-menu-item-only-child\" role=\"menuitem\">\r\n                            <NavLink activeClassName='activeMenuLink' exact to=\"/login\">Signout</NavLink>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Menu","import React, { useState, useEffect } from 'react'\r\nimport './AddShop.css'\r\nimport { Formik } from 'formik'\r\nimport { Input, Form, TimePicker, Select } from 'formik-antd'\r\nimport * as Yup from 'yup'\r\nimport LocationPicker from 'react-location-picker'\r\nimport axios from 'axios'\r\nimport { Spin, Alert } from 'antd'\r\n\r\nfunction AddShop(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const initialValues = {\r\n        ShopName: '',\r\n        Category: '',\r\n        Email: '',\r\n        SecondaryContact: '',\r\n        BranchSupervisorRequired: false,\r\n        BranchSupervisorContact: '',\r\n        Building: '',\r\n        StreetName: '',\r\n        City: '',\r\n        State: '',\r\n        StartTime: '',\r\n        EndTime: '',\r\n        SlotDuration: '',\r\n        VisitorsInEachSlot: '',\r\n        MaximumBookingCount: '',\r\n        Pincode: '',\r\n        Country: ''\r\n    }\r\n\r\n    const handleLocationChange = values => {\r\n        setLocation(values.position)\r\n    }\r\n\r\n    const validationSchema = Yup.object({\r\n        ShopName: Yup.string().required('Shop Name required!'),\r\n        Category: Yup.string().required('Category required!'),\r\n        Building: Yup.string().required('Building required!'),\r\n        StreetName: Yup.string().required('Street Name required!'),\r\n        City: Yup.string().required('City required!'),\r\n        State: Yup.string().required('State required!'),\r\n        SlotDuration: Yup.number().required('Slot Duration required!'),\r\n        VisitorsInEachSlot: Yup.number().required('Visitors count required!'),\r\n        MaximumBookingCount: Yup.number().required('Maximum booking count required!'),\r\n        StartTime: Yup.string().nullable().required('Start Time required!'),\r\n        EndTime: Yup.string().nullable().required('End Time required!'),\r\n        Email: Yup.string().email('Invalid Email!'),\r\n        SecondaryContact: Yup.string().required('Mobile Number required!')\r\n    })\r\n\r\n    const onSubmit = values => {\r\n        console.log('values', values);\r\n        const _StartDateTime = new Date(values.StartTime)\r\n        const _StartTime = _StartDateTime.toLocaleTimeString('en-GB')\r\n        const _EndDateTime = new Date(values.EndTime)\r\n        const _EndTime = _EndDateTime.toLocaleTimeString('en-GB')\r\n        setIsLoading(true)\r\n\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/branch/addbranch', {\r\n            UserID: user.UserID,\r\n            BranchName: values.ShopName,\r\n            CategoryID: values.Category,\r\n            ClientID: user.ClientID,\r\n            BranchPhoneNumber: values.SecondaryContact,\r\n            BranchEmailID: values.Email,\r\n            IsBranchSupervisor: false,\r\n            AdminPhoneNumber: null,\r\n            BuildingNumber: values.Building,\r\n            StreetName: values.StreetName,\r\n            City: values.City,\r\n            State: values.State,\r\n            Country: values.Country,\r\n            Pincode: values.Pincode,\r\n            Latitude: location.lat,\r\n            Longitude: location.lng,\r\n            BranchStartTime: _StartTime,\r\n            BranchEndTime: _EndTime,\r\n            SlotInMinutes: values.SlotDuration,\r\n            MaximumBookingCount: values.MaximumBookingCount,\r\n            EntryInEachSlot: values.VisitorsInEachSlot,\r\n            WorkingDayList: '0,1,2,3,4,5,6',\r\n            BranchImage: null\r\n        }).then(resp => {\r\n            setIsLoading(false)\r\n            props.history.push(\"/my-shops\")\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    const [categories, setCategories] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [location, setLocation] = useState({\r\n        lat: 12.9716,\r\n        lng: 77.5946\r\n    })\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/branch/getallcategories', {\r\n            UserID: user.UserID\r\n        }).then(resp => {\r\n            let _categories = []\r\n            resp.data.data.forEach(element => {\r\n                const _category = new SelectOptions(element.CategoryID, element.CategoryName)\r\n                _categories.push(_category)\r\n            });\r\n            setCategories(_categories)\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Formik initialValues={initialValues} validationSchema={validationSchema} onSubmit={onSubmit} >\r\n            <Form>\r\n                <Spin spinning={isLoading}>\r\n                    <div className='add-bracnch-section'>\r\n                        <div className='branch-details'>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        Shop Name\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"ShopName\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"ShopName\" autoComplete=\"off\" placeholder=\"Shop Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Shop Category\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Category\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Select name=\"Category\" options={categories} placeholder=\"Select Category\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ant-form-item\">\r\n                                Contact\r\n                        </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Mobile Number\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"SecondaryContact\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"SecondaryContact\" autoComplete=\"off\" placeholder=\"Mobile Number\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Email\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Email\"\r\n                                    >\r\n                                        <Input name=\"Email\" autoComplete=\"off\" placeholder=\"Email\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"ant-form-item\">\r\n                                Address\r\n                        </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        Building\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Building\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"Building\" autoComplete=\"off\" placeholder=\"Building\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Street Name\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"StreetName\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"StreetName\" autoComplete=\"off\" placeholder=\"Street Name\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        City\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"City\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"City\" autoComplete=\"off\" placeholder=\"City\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        State\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"State\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input name=\"State\" autoComplete=\"off\" placeholder=\"State\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                                    <div className=\"field-label\">\r\n                                        Pincode\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Pincode\"\r\n                                    >\r\n                                        <Input name=\"Pincode\" autoComplete=\"off\" placeholder=\"Pincode\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                                <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                                    <div className=\"field-label\">\r\n                                        Country\r\n                        </div>\r\n                                    <Form.Item\r\n                                        name=\"Country\"\r\n                                    >\r\n                                        <Input name=\"Country\" autoComplete=\"off\" placeholder=\"Country\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className='ant-col-xs-24'>\r\n                                <div className=\"field-label\">\r\n                                    Choose Location\r\n                        </div>\r\n                            </div>\r\n                            <div className='ant-col-xs-24'>\r\n                                <LocationPicker\r\n                                    containerElement={<div style={{ height: '100%' }} />}\r\n                                    mapElement={<div style={{ height: '400px' }} />}\r\n                                    defaultPosition={location}\r\n                                    onChange={handleLocationChange}\r\n                                />\r\n                            </div>\r\n                        </div>\r\n                        <div className='slot-settings'>\r\n                            <div className='slot-settings-header ant-form-item'>Slot Settings</div>\r\n                            <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Working Days</div>\r\n                                <div className='settings-values'>\r\n                                    <div className='display-flex'>\r\n                                        <div className=\"selected-days\">M</div>\r\n                                        <div className=\"selected-days\">T</div>\r\n                                        <div className=\"selected-days\">W</div>\r\n                                        <div className=\"selected-days\">T</div>\r\n                                        <div className=\"selected-days\">F</div>\r\n                                        <div className=\"selected-days\">S</div>\r\n                                        <div className=\"selected-days\">S</div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Working Start Time</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"StartTime\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <TimePicker style={{ width: '100%' }}\r\n                                            placeholder=\"Select Start Time\"\r\n                                            name='StartTime'\r\n                                            format='h:mm a'></TimePicker>\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Working End Time</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"EndTime\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <TimePicker style={{ width: '100%' }} placeholder=\"Select End Time\" name='EndTime' format='h:mm a'></TimePicker>\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Slot Duration</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"SlotDuration\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} name=\"SlotDuration\" autoComplete=\"off\" placeholder=\"Slot Duration in minutes\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Visitors Count in a Slot</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"VisitorsInEachSlot\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} name=\"VisitorsInEachSlot\" autoComplete=\"off\" placeholder=\"Visitors count in numbers\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div style={{ display: 'flex' }}>\r\n                                <div className='settings-label'>Maximum no. of visitors in each booking</div>\r\n                                <div className='settings-values'>\r\n                                    <Form.Item\r\n                                        name=\"MaximumBookingCount\"\r\n                                        hasFeedback\r\n                                        showValidateSuccess\r\n                                    >\r\n                                        <Input style={{ width: '100%' }} name=\"MaximumBookingCount\" autoComplete=\"off\" placeholder=\"Maximum no. of visitors in each booking\" />\r\n                                    </Form.Item>\r\n                                </div>\r\n                            </div>\r\n                            <div className='ant-form-item'>\r\n                                <button className=\"login-btn\">Submit</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Spin>\r\n            </Form>\r\n        </Formik>\r\n    )\r\n}\r\n\r\nclass SelectOptions {\r\n    constructor(value, label) {\r\n        this.value = value\r\n        this.label = label\r\n    }\r\n}\r\n\r\nexport default AddShop","class services {\r\n    selectedShop = null\r\n}\r\n\r\nconst _services = new services()\r\nexport default _services","import React, { useState, useEffect } from 'react'\r\nimport { Input, Result } from 'antd'\r\nimport './MyShops.css'\r\nimport axios from 'axios'\r\nimport { Spin } from 'antd'\r\nimport _services from '../../utils/services'\r\nconst logo = require('../../assets/images/Shopping Cart-ico.svg');\r\nconst pointer = require('../../assets/images/Pointer.svg');\r\n\r\nfunction MyShops(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const [shops, setShops] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [filter, setFilter] = useState('')\r\n\r\n    let filteredShops = shops.filter(element => {\r\n        return element.BranchName.toLowerCase().includes(filter.toLowerCase());\r\n    });\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        const user = JSON.parse(localStorage.user)\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/branch/getallbranches', {\r\n            UserID: user.UserID,\r\n            ClientID: user.ClientID\r\n        }).then(resp => {\r\n            setShops(resp.data.data)\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    const onSearch = (filter) => {\r\n        setFilter(filter)\r\n    }\r\n\r\n    const handleClick = () => {\r\n        props.history.push(\"/add-shop\")\r\n    }\r\n\r\n    const handleShopClick = (shop) => {\r\n        _services.selectedShop = shop\r\n        props.history.push(\"/home\")\r\n    }\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <Spin spinning={isLoading}>\r\n                <div className='filter'>\r\n                    <div className='booking-info-header'>Welcome to, </div>\r\n                    <div className='display-flex'>\r\n                        <div className='brand-name'>\r\n                            {\r\n                                user.ClientName\r\n                            }\r\n                        </div>\r\n                        <div>\r\n                            <Input placeholder=\"Search Shop Name\" allowClear onChange={(e) => onSearch(e.target.value)} />\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='shops-section'>\r\n                    {\r\n                        filteredShops && filteredShops.length ?\r\n                            <div className='shops-grid'>\r\n                                {\r\n                                    filteredShops.map((item, index) => {\r\n                                        return (\r\n                                            <div onClick={() => handleShopClick(item)} key={index} className='shop-grid-item'>\r\n                                                <div className='img'>\r\n                                                    <img alt=\"shop\" src={logo} />\r\n                                                </div>\r\n                                                <div className='info'>\r\n                                                    <div className='shop-names'>{item.BranchName}</div>\r\n                                                    <div>{item.CategoryName}</div>\r\n                                                    <div className='shop-address'><img alt='' src={pointer} />  {item.BuildingNumber} {item.StreetName} {item.City}  {item.State}</div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div> : <Result\r\n                                title=\"Your brand is empty. Please create a shop\"\r\n                                extra={\r\n                                    <button onClick={handleClick} className=\"weq-button\">Add Shop</button>\r\n                                }\r\n                            />\r\n                    }\r\n                </div>\r\n            </Spin>\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default MyShops\r\n","import React, { useState, useEffect } from 'react'\r\nimport './TodaysBookings.css'\r\nimport axios from 'axios'\r\nimport { Spin, Result } from 'antd'\r\nimport moment from 'moment'\r\nimport _services from '../../utils/services'\r\n\r\nfunction TodaysBookings(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const dateFormat = 'YYYY-MM-DD'\r\n    const [morningSlots, setMorningSlots] = useState([])\r\n    const [afternoonSlots, setAfternoonSlots] = useState([])\r\n    const [eveningSlots, setEveningSlots] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n\r\n    const groupBy = (array, key) => {\r\n        return array.reduce((result, currentValue) => {\r\n            (result[currentValue[key]] = result[currentValue[key]] || []).push(\r\n                currentValue\r\n            );\r\n            return result;\r\n        }, {});\r\n    };\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/branch/getslotdetails', {\r\n            BranchID: _services.selectedShop.BranchID,\r\n            UserID: user.UserID,\r\n            StartDate: moment(new Date()).format(dateFormat),\r\n            EndDate: moment(new Date()).format(dateFormat)\r\n        }).then(resp => {\r\n            const _slots = groupBy(resp.data.config, 'DaySequence')\r\n            setMorningSlots(_slots.Morning)\r\n            setAfternoonSlots(_slots.Afternoon)\r\n            setEveningSlots(_slots.Evening)\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    return (\r\n        <Spin spinning={isLoading}>\r\n            <div className='slots-section'>\r\n                {\r\n                    isLoading ? <Result\r\n                        title='Loading...'\r\n                    /> : <React.Fragment>\r\n                            {\r\n                                morningSlots && morningSlots.length ? <div className='slots-heading'>\r\n                                    <span className='booked-timing'>Morning</span>\r\n                                    <span className='booked-count'>Booked 20/35</span>\r\n                                </div> : null\r\n                            }\r\n                            <div className='slots-grid'>\r\n                                {\r\n                                    morningSlots && morningSlots.map((item, _index) => {\r\n                                        return (\r\n                                            <div key={_index} className={item.BookedCount ? 'grid-item-booked' : 'grid-item'}>\r\n                                                <div>\r\n                                                    <span className='sl-no'>WEQ </span>\r\n                                                    <span className='booking-id'>{item.BookingUniqueID || (_index + 1)}</span>\r\n                                                </div>\r\n                                                <div className='display-flex'>\r\n                                                    <div className='ppl-count'>{item.BookedCount} People</div>\r\n                                                    <div className='duration'>\r\n                                                        {moment(item.SlotStartTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")} - {moment(item.SlotEndTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            {\r\n                                afternoonSlots && afternoonSlots.length ? <div className='slots-heading'>\r\n                                    <span className='booked-timing'>Afternoon</span>\r\n                                    <span className='booked-count'>Booked 20/35</span>\r\n                                </div> : null\r\n                            }\r\n                            <div className='slots-grid'>\r\n                                {\r\n                                    afternoonSlots && afternoonSlots.map((item, _index) => {\r\n                                        return (\r\n                                            <div key={_index} className={item.BookedCount ? 'grid-item-booked' : 'grid-item'}>\r\n                                                <div>\r\n                                                    <span className='sl-no'>WEQ </span>\r\n                                                    <span className='booking-id'>{item.BookingUniqueID || (_index + 1)}</span>\r\n                                                </div>\r\n                                                <div className='display-flex'>\r\n                                                    <div className='ppl-count'>{item.BookedCount} People</div>\r\n                                                    <div className='duration'>\r\n                                                        {moment(item.SlotStartTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")} - {moment(item.SlotEndTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                            {\r\n                                eveningSlots && eveningSlots.length ? <div className='slots-heading'>\r\n                                    <span className='booked-timing'>Evening</span>\r\n                                    <span className='booked-count'>Booked 20/35</span>\r\n                                </div> : null\r\n                            }\r\n                            <div className='slots-grid'>\r\n                                {\r\n                                    eveningSlots && eveningSlots.map((item, _index) => {\r\n                                        return (\r\n                                            <div key={_index} className={item.BookedCount ? 'grid-item-booked' : 'grid-item'}>\r\n                                                <div>\r\n                                                    <span className='sl-no'>WEQ </span>\r\n                                                    <span className='booking-id'>{item.BookingUniqueID || (_index + 1)}</span>\r\n                                                </div>\r\n                                                <div className='display-flex'>\r\n                                                    <div className='ppl-count'>{item.BookedCount} People</div>\r\n                                                    <div className='duration'>\r\n                                                        {moment(item.SlotStartTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")} - {moment(item.SlotEndTime || 0, [\"h:mm A\"]).format(\"hh:mm A\")}\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        )\r\n                                    })\r\n                                }\r\n                            </div>\r\n                        </React.Fragment>\r\n                }\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default TodaysBookings","import React, { useState, useEffect } from 'react'\r\nimport './PastBookings.css'\r\nimport { DatePicker, Input } from 'antd'\r\nimport axios from 'axios'\r\nimport { Spin, Result, Popover } from 'antd'\r\nimport moment from 'moment'\r\nimport _services from '../../utils/services'\r\nconst { RangePicker } = DatePicker;\r\n\r\nfunction PastBookings(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const dateFormat = 'DD/MM/YYYY'\r\n    var currentDate = new Date()\r\n    const lastFiveDate = new Date(currentDate.setDate(currentDate.getDate() - 7))\r\n    const [startDate, setStartDate] = useState(moment(lastFiveDate, dateFormat))\r\n    const [endDate, setEndDate] = useState(moment(new Date(), dateFormat))\r\n    const [slots, setSlots] = useState([])\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [emptyTitle, setEmptyTitle] = useState('Loading...')\r\n\r\n    function onChange(dates) {\r\n        if (dates) {\r\n            setStartDate(dates[0])\r\n            setEndDate(dates[1])\r\n            setIsLoading(true)\r\n            axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/branch/getslotdetails', {\r\n                BranchID: _services.selectedShop.BranchID,\r\n                UserID: user.UserID,\r\n                StartDate: moment(new Date(dates[0])).format('YYYY-MM-DD'),\r\n                EndDate: moment(new Date(dates[1])).format('YYYY-MM-DD')\r\n            }).then(resp => {\r\n                let _slots = resp.data.data\r\n                _slots.map(item => {\r\n                    item.BookedDate = moment(new Date(item.SelectedDateRange)).format(dateFormat)\r\n                })\r\n                let uniqueBookedDates = [...new Set(_slots.map(item => item.BookedDate))];\r\n                let _newSlots = []\r\n                uniqueBookedDates.forEach(element => {\r\n                    let _slot = {\r\n                        date: element,\r\n                        data: _slots.filter(_element => element === _element.BookedDate)\r\n                    }\r\n                    _newSlots.push(_slot)\r\n                })\r\n                setSlots(_newSlots)\r\n                if (!_newSlots.length) {\r\n                    setEmptyTitle('No slots are booked between ' + moment(new Date(dates[0])).format(dateFormat) + ' and ' + moment(new Date(dates[1])).format(dateFormat))\r\n                }\r\n                setIsLoading(false)\r\n            }).catch(err => {\r\n                setIsLoading(false)\r\n                console.log(err);\r\n            })\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/branch/getslotdetails', {\r\n            BranchID: _services.selectedShop.BranchID,\r\n            UserID: user.UserID,\r\n            StartDate: moment(lastFiveDate).format('YYYY-MM-DD'),\r\n            EndDate: moment(new Date()).format('YYYY-MM-DD')\r\n        }).then(resp => {\r\n            let _slots = resp.data.data\r\n            _slots.map(item => {\r\n                item.BookedDate = moment(new Date(item.SelectedDateRange)).format(dateFormat)\r\n            })\r\n            let uniqueBookedDates = [...new Set(_slots.map(item => item.BookedDate))];\r\n            let _newSlots = []\r\n            uniqueBookedDates.forEach(element => {\r\n                let _slot = {\r\n                    date: element,\r\n                    data: _slots.filter(_element => element === _element.BookedDate)\r\n                }\r\n                _newSlots.push(_slot)\r\n            })\r\n            setSlots(_newSlots)\r\n            if (!_newSlots.length) {\r\n                setEmptyTitle('No slots are booked between ' + moment(lastFiveDate).format(dateFormat) + ' and ' + moment(new Date()).format(dateFormat))\r\n            }\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    const onSearch = (filter) => { }\r\n\r\n    const content = (item) => (\r\n        <div>\r\n            <p>Name: {item.UserName}</p>\r\n            <p>Mobile: {item.PhoneNumber}</p>\r\n            <p>Email: {item.UserEmail}</p>\r\n        </div>\r\n    )\r\n\r\n    return (\r\n        <Spin spinning={isLoading}>\r\n            <div className='visitors-section'>\r\n                <div className='display-flex'>\r\n                    <div style={{ 'flexGrow': 1 }}>\r\n                        <RangePicker\r\n                            defaultValue={[startDate, endDate]}\r\n                            format={dateFormat}\r\n                            onChange={onChange}\r\n                        />\r\n                    </div>\r\n                    <div style={{ display: 'none' }}>\r\n                        <Input placeholder=\"Enter visitor name\" allowClear onChange={(e) => onSearch(e.target.value)} />\r\n                    </div>\r\n                </div>\r\n                {\r\n                    slots && slots.length ? slots.map((item, index) => {\r\n                        return (\r\n                            <React.Fragment key={index}>\r\n                                <div className='date-header'>{item.date}</div>\r\n                                <div className='slots-grid'>\r\n                                    {\r\n                                        item.data.map((_item, _index) => {\r\n                                            return (\r\n                                                <Popover key={_index} content={() => content(_item)} title=\"Guest details\">\r\n                                                    <div key={_index} className='grid-item'>\r\n                                                        <div>\r\n                                                            <span className='sl-no'>{_item.UserName}</span>\r\n                                                        </div>\r\n                                                        <div className='display-flex'>\r\n                                                            <div className='ppl-count'>with {_item.BookedCount} visitors</div>\r\n                                                            <div className='duration'>\r\n                                                                {moment(_item.SlotStartTime || 0, [\"HH\"]).format(\"hh A\")} - {moment(_item.SlotEndTime || 0, [\"HH\"]).format(\"hh A\")}\r\n                                                            </div>\r\n                                                        </div>\r\n                                                    </div>\r\n                                                </Popover>\r\n                                            )\r\n                                        })\r\n                                    }\r\n                                </div>\r\n                            </React.Fragment>\r\n                        )\r\n                    }) : <Result\r\n                            title={emptyTitle}\r\n                        />\r\n                }\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default PastBookings","import React from 'react'\r\nimport './Header.css'\r\nimport { NavLink } from 'react-router-dom'\r\nimport _services from '../../utils/services'\r\n\r\nfunction Header(props) {\r\n    const user = JSON.parse(localStorage.user)\r\n\r\n    return (\r\n        <header className=\"home-header\">\r\n            <div className=\"breadcrum\">\r\n                Home / <NavLink exact to='/my-shops'>{user.ClientName}</NavLink>\r\n            </div>\r\n            <div className=\"shop-name\">\r\n                {_services.selectedShop.BranchName}\r\n            </div>\r\n            <div className='sub-menu'>\r\n                <NavLink activeClassName='activeMenuLink' exact to='/home'>Today’s Bookings</NavLink>\r\n                <NavLink activeClassName='activeMenuLink' exact to='/home/pastbookings'>Past Bookings</NavLink>\r\n                <NavLink activeClassName='activeMenuLink' exact to='/home/shopinfo'>Shop Info</NavLink>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React, { useState, useEffect } from 'react'\r\nimport LocationPicker from 'react-location-picker'\r\nimport axios from 'axios'\r\nimport { Spin } from 'antd'\r\nimport moment from 'moment'\r\nimport _services from '../../utils/services'\r\n\r\nfunction ShopInfo(props) {\r\n\r\n    const user = JSON.parse(localStorage.user)\r\n    const [shopDetails, setShopDetails] = useState({})\r\n    const [isLoading, setIsLoading] = useState(false)\r\n    const [location, setLocation] = useState({\r\n        lat: 12.9716,\r\n        lng: 77.5946\r\n    })\r\n\r\n    useEffect(() => {\r\n        setIsLoading(true)\r\n        axios.post('http://ec2-52-15-191-227.us-east-2.compute.amazonaws.com/superadmin/branch/getbranch_id', {\r\n            BranchID: _services.selectedShop.BranchID,\r\n            UserID: user.UserID,\r\n        }).then(resp => {\r\n            setShopDetails(resp.data.data[0])\r\n            setLocation({\r\n                lat: resp.data.data[0].Latitude,\r\n                lng: resp.data.data[0].Longitude\r\n            })\r\n            setIsLoading(false)\r\n        }).catch(err => {\r\n            setIsLoading(false)\r\n            console.log(err);\r\n        })\r\n    }, [])\r\n\r\n    const handleLocationChange = values => {\r\n        console.log(values)\r\n    }\r\n\r\n    return (\r\n        <Spin spinning={isLoading}>\r\n            <div className='add-bracnch-section'>\r\n                <div className='branch-details'>\r\n                    <div className=\"ant-form-item\">\r\n                        Contact\r\n                        </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='ant-col-xs-12' style={{ paddingRight: '8px' }}>\r\n                            <div className=\"field-label\">\r\n                                Mobile Number\r\n                        </div>\r\n                                +91 {shopDetails.BranchPhoneNumber}\r\n                        </div>\r\n                        <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                            <div className=\"field-label\">\r\n                                Email\r\n                        </div>\r\n                            {shopDetails.BranchEmailID}\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"ant-form-item\">\r\n                        Address\r\n                        </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                            <div className=\"field-label\">\r\n                                Building\r\n                        </div>\r\n                            {shopDetails.BuildingNumber}\r\n                        </div>\r\n                        <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                            <div className=\"field-label\">\r\n                                Street Name\r\n                        </div>\r\n                            {shopDetails.StreetName}\r\n                        </div>\r\n                    </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='ant-col-xs-12' style={{ paddingRight: '8px' }} >\r\n                            <div className=\"field-label\">\r\n                                City\r\n                        </div>\r\n                            {shopDetails.City}\r\n                        </div>\r\n                        <div className='ant-col-xs-12' style={{ paddingLeft: '8px' }}>\r\n                            <div className=\"field-label\">\r\n                                State\r\n                        </div>\r\n                            {shopDetails.State}\r\n                        </div>\r\n                    </div>\r\n                    <div className='ant-col-xs-24'>\r\n                        <LocationPicker\r\n                            containerElement={<div style={{ height: '100%' }} />}\r\n                            mapElement={<div style={{ height: '400px' }} />}\r\n                            defaultPosition={location}\r\n                            onChange={handleLocationChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className='slot-settings'>\r\n                    <div className='slot-settings-header ant-form-item'>Slot Settings</div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='settings-label'>Working Days</div>\r\n                        <div className='settings-values'>\r\n                            <div className='display-flex'>\r\n                                <div className=\"selected-days\">M</div>\r\n                                <div className=\"selected-days\">T</div>\r\n                                <div className=\"selected-days\">W</div>\r\n                                <div className=\"selected-days\">T</div>\r\n                                <div className=\"selected-days\">F</div>\r\n                                <div className=\"selected-days\">S</div>\r\n                                <div className=\"selected-days\">S</div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='settings-label'>Working Start Time</div>\r\n                        <div className='settings-values'>\r\n                            {moment(shopDetails.BranchStartTime || 0, [\"HH\"]).format(\"hh A\")}\r\n                        </div>\r\n                    </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='settings-label'>Working End Time</div>\r\n                        <div className='settings-values'>\r\n                            {moment(shopDetails.BranchEndTime || 0, [\"HH\"]).format(\"hh A\")}\r\n                        </div>\r\n                    </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='settings-label'>Slot Duration</div>\r\n                        <div className='settings-values'>\r\n                            {shopDetails.SlotInMinutes} minutes\r\n                    </div>\r\n                    </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='settings-label'>Visitors Count in a Slot</div>\r\n                        <div className='settings-values'>\r\n                            {shopDetails.EntryInEachSlot}\r\n                        </div>\r\n                    </div>\r\n                    <div className='ant-form-item' style={{ display: 'flex' }}>\r\n                        <div className='settings-label'>Maximum no. of visitors in each booking</div>\r\n                        <div className='settings-values'>\r\n                            {shopDetails.MaximumBookingCount}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Spin>\r\n    )\r\n}\r\n\r\nexport default ShopInfo","import React from 'react'\r\nimport { Route, Switch } from 'react-router-dom'\r\nimport TodaysBookings from '../TodaysBookings/TodaysBookings';\r\nimport PastBookings from '../PastBookings/PastBookings';\r\nimport Header from '../Header/Header'\r\nimport ShopInfo from '../ShopInfo/ShopInfo';\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div style={{ backgroundColor: '#ECF2F5', minHeight: 'calc(100vh - 64px)' }}>\r\n            <Header></Header>\r\n            <Switch>\r\n                <Route exact path='/home' component={TodaysBookings} ></Route>\r\n                <Route exact path='/home/pastbookings' component={PastBookings} ></Route>\r\n                <Route exact path='/home/shopinfo' component={ShopInfo} ></Route>\r\n                {/* <Route exact path={`${props.match.path}`} component={TodaysBookings} ></Route>\r\n                <Route exact path={`${props.match.path}/pastbookings`} component={PastBookings} ></Route>\r\n                <Route exact path={`${props.match.path}/shopinfo`} component={ShopInfo} ></Route> */}\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react';\r\nimport './App.css';\r\nimport \"antd/dist/antd.css\"\r\nimport { BrowserRouter as Router, Route, Switch, Redirect } from 'react-router-dom'\r\nimport Register from './components/Register/Register';\r\nimport Login from './components/Login/Login';\r\nimport Menu from './components/Menu/Menu'\r\nimport AddShop from './components/AddShop/AddShop';\r\nimport MyShops from './components/MyShops/MyShops';\r\nimport Home from './components/Home/Home';\r\nimport _services from './utils/services';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path='/login' component={Login} ></Route>\r\n        <Route exact path='/' component={Register} ></Route>\r\n        <React.Fragment>\r\n          <Menu />\r\n          <Route exact path='/add-shop' component={AddShop} ></Route>\r\n          <Route exact path='/my-shops' component={MyShops} ></Route>\r\n          <Route path='/home' render={() => (\r\n            _services.selectedShop !== null ? (<Home />) : (<Redirect to='/my-shops' />)\r\n          )} ></Route>\r\n        </React.Fragment>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}